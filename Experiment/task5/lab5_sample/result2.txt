lno@0   @0   program  children: [@1  ]  
lno@1   @1   statement   children: [@2  @3  @4  @5  @6  @7  @8  @9  ]  stmt: function
lno@1   @2   type type: void
lno@1   @3   variable varname: main
lno@2   @4   statement   children: [@10  @11  @12  ]  stmt: decl
lno@3   @5   statement   children: [@13  @14  ]  stmt: assign
lno@4   @6   statement   children: [@15  @16  ]  stmt: assign
lno@5   @7   statement   children: [@17  @18  ]  stmt: decl
lno@6   @8   statement   children: [@19  ]  stmt: scanf
lno@7   @9   statement   children: [@20  @21  @22  @23  @24  ]  stmt: while
lno@2   @10  type type: int
lno@2   @11  variable varname: a
lno@2   @12  variable varname: s
lno@3   @13  variable varname: a
lno@3   @14  const type: int
lno@4   @15  variable varname: s
lno@4   @16  const type: int
lno@5   @17  type type: char
lno@5   @18  variable varname: ch
lno@6   @19  const type: string
lno@7   @20  expression  children: [@25  @26  ]  optype: &&
lno@8   @21  statement   children: [@27  ]  stmt: printf
lno@9   @22  statement   children: [@28  @29  ]  stmt: decl
lno@10  @23  statement   children: [@30  @31  ]  stmt: assign
lno@11  @24  statement   children: [@32  @33  ]  stmt: if
lno@7   @25  expression  children: [@34  @35  ]  optype: ||
lno@7   @26  expression  children: [@47  @48  ]  optype: !
lno@8   @27  const type: string
lno@9   @28  type type: int
lno@9   @29  variable varname: a
lno@10  @30  variable varname: a
lno@10  @31  const type: int
lno@11  @32  expression  children: [@38  @39  ]  optype: >=
lno@12  @33  statement   children: [@40  @41  @42  @43  ]  stmt: comstatement
lno@7   @34  expression  children: [@44  @45  ]  optype: <=
lno@7   @35  expression  children: [@46  @47  @48  ]  optype: >
lno@7   @47  const type: int
lno@7   @48  expression  children: [@49  @50  ]  optype: ==
lno@11  @38  variable varname: a
lno@11  @39  const type: int
lno@12  @40  statement   children: [@0  @0  ]  stmt: assign
lno@13  @41  statement   children: [@0  @0  ]  stmt: assign
lno@14  @42  statement   children: [@0  @0  ]  stmt: assign
lno@16  @43  statement   children: [@0  @0  @0  ]  stmt: if
lno@7   @44  variable varname: a
lno@7   @45  const type: int
lno@7   @46  variable varname: s
lno@7   @47  const type: int
lno@7   @48  expression  children: [@49  @50  ]  optype: ==
lno@7   @49  variable varname: a
lno@7   @50  const type: int
