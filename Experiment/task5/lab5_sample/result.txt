TreeNode!1
TreeNode!1
TreeNode!1
TreeNode!1
addChild!1
addChild!1
addChild!1
TreeNode!2
TreeNode!2
TreeNode!2
TreeNode!2
addChild!2
addChild!2
addChild!2
addSibling!2
TreeNode!3
TreeNode!3
TreeNode!3
addChild!3
addChild!3
TreeNode!3
addChild!2
addChild!3
TreeNode!4
TreeNode!4
TreeNode!4
TreeNode!4
addChild!4
addChild!4
addChild!4
TreeNode!5
TreeNode!5
TreeNode!5
TreeNode!5
addChild!5
addChild!5
TreeNode!5
addChild!5
addChild!5
addSibling!5
TreeNode!3
addChild!3
addChild!4
addSibling!3
TreeNode!7
TreeNode!7
TreeNode!7
addChild!7
addChild!7
TreeNode!8
TreeNode!8
addChild!8
TreeNode!7
addChild!7
addChild!8
addSibling!7
TreeNode!0
addChild!1
genNodeId()!
TreeNode!888
2
3
4
4.1
4.2
4.3
4.4
4.5
5
6
3
6
3
4
4.1
4.2
4.3
4.4
4.5
5
5
6
3
4
4.1
4.2
4.3
4.4
4.5
5
6
3
6
3
6
3
6
3
4
4.1
4.2
4.3
4.4
4.5
5
6
3
4
4.1
4.2
4.3
4.4
4.5
6
3
6
3
7
printAST()!
printNodeInfo()!
lno@0  @0  program  printChildrenId()!
children: [@1 @2 @  ]  
TreeNode!888
12
13
14
14.1
14.2
14.3
printNodeInfo()!
lno@1  @1 statement   printChildrenId()!
children: [@3 @4 @5 @  ]  printSpecialInfo()!
sType2String!
decl
14.4
15
printNodeInfo()!
lno@7  @2 statement   printChildrenId()!
children: [@6 @7 @  ]  printSpecialInfo()!
sType2String!
while
16
13
16
13
14
14.1
14.2
14.3
printNodeInfo()!
lno@1  @3 type type: printSpecialInfo()!
int
14.4
15
printNodeInfo()!
lno@1  @4 variable varname: printSpecialInfo()!
a
15
printNodeInfo()!
lno@1  @5 const type: printSpecialInfo()!
int
16
13
14
14.1
14.2
14.3
printNodeInfo()!
lno@7  @6 expression  printChildrenId()!
children: [@8 @9 @  ]  printSpecialInfo()!

14.4
15
printNodeInfo()!
lno@8  @7 statement   printChildrenId()!
children: [@10 @  ]  printSpecialInfo()!
sType2String!
printf
16
13
16
13
16
13
16
13
14
14.1
14.2
14.3
printNodeInfo()!
lno@7  @8 variable varname: printSpecialInfo()!
a
14.4
15
printNodeInfo()!
lno@7  @9 variable varname: printSpecialInfo()!
b
16
13
14
14.1
14.2
14.3
printNodeInfo()!
lno@8  @10 variable varname: printSpecialInfo()!
a
14.4
16
13
16
13
17
