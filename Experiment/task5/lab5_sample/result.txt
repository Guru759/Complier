TreeNode!3
TreeNode!3
TreeNode!3
TreeNode!3
3addChild!3
3addChild!3
3addChild!3
TreeNode!4
TreeNode!4
TreeNode!4
TreeNode!4
4addChild!4
4addChild!4
4addChild!4
3addSibling!4
TreeNode!5
TreeNode!5
TreeNode!5
5addChild!5
5addChild!5
TreeNode!5
5addChild!4
5addChild!5
TreeNode!6
TreeNode!6
TreeNode!6
TreeNode!6
6addChild!6
6addChild!6
6addChild!6
TreeNode!7
TreeNode!7
TreeNode!7
TreeNode!7
7addChild!7
7addChild!7
TreeNode!7
7addChild!7
7addChild!7
6addSibling!7
TreeNode!5
5addChild!5
5addChild!6
3addSibling!5
TreeNode!9
TreeNode!9
TreeNode!9
9addChild!9
9addChild!9
TreeNode!10
TreeNode!10
10addChild!10
TreeNode!9
9addChild!9
9addChild!10
3addSibling!9
TreeNode!0
0addChild!3
genNodeId()!
TreeNode!888
id是啥：2
id是啥：3
id是啥：4
id是啥：5
id是啥：6
id是啥：7
id是啥：8
id是啥：9
id是啥：10
id是啥：11
id是啥：12
id是啥：13
id是啥：14
id是啥：15
id是啥：16
id是啥：17
id是啥：18
id是啥：19
id是啥：20
id是啥：21
id是啥：22
id是啥：23
id是啥：24
id是啥：25
id是啥：26
id是啥：27
id是啥：28
id是啥：29
id是啥：30
id是啥：31
id是啥：32
id是啥：33
printAST()!
lno@0   @0   program  children: [@1  @2  @3  @4  ]  
TreeNode!888
lno@3   @1   statement   children: [@5  @6  @7  ]  stmt: decl
lno@4   @2   statement   children: [@8  @9  @19  @20  ]  stmt: decl
lno@5   @3   statement   children: [@12  @13  @14  ]  stmt: if
lno@9   @4   statement   children: [@15  @16  ]  stmt: while
lno@3   @5   type type: int
lno@3   @6   variable varname: a
lno@3   @7   const type: int
lno@4   @8   type type: int
lno@4   @9   variable varname: b
lno@4   @19  const type: int
lno@5   @20  expression  children: [@29  @30  ]  optype: ==
lno@5   @12  expression  children: [@19  @20  ]  optype: !
lno@6   @13  statement   children: [@21  @22  @23  ]  stmt: decl
lno@7   @14  statement   children: [@24  @25  ]  stmt: assign
lno@9   @15  expression  children: [@26  @27  ]  optype: ==
lno@10  @16  statement   children: [@28  ]  stmt: printf
lno@5   @29  const type: int
lno@5   @30  const type: int
lno@4   @19  const type: int
lno@5   @20  expression  children: [@29  @30  ]  optype: ==
lno@6   @21  type type: int
lno@6   @22  variable varname: a
lno@6   @23  const type: int
lno@7   @24  variable varname: a
lno@7   @25  expression  children: [@31  @32  ]  optype: +
lno@9   @26  variable varname: a
lno@9   @27  variable varname: b
lno@10  @28  variable varname: a
lno@5   @29  const type: int
lno@5   @30  const type: int
lno@7   @31  variable varname: a
lno@7   @32  const type: int
